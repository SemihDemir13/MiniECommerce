import { createSlice } from "@reduxjs/toolkit";
import { toast } from "react-toastify";


const getBasketFromStorage = () => {
    const basket = localStorage.getItem("basket");
    if (!basket) return [];  // EÄŸer basket null veya undefined ise boÅŸ dizi dÃ¶ndÃ¼r

    try {
        return JSON.parse(basket);
    } catch (error) {
        console.error("Sepet verisi bozuk veya hatalÄ±!", error);
        return []; // HatalÄ± veri durumunda boÅŸ dizi dÃ¶ndÃ¼r
    }
};

const initialState={
    products:getBasketFromStorage()
}
const writeFromBasketToStorage = (basket) => {
    localStorage.setItem("basket", JSON.stringify(basket));
};


export const BasketSlice=createSlice({
    name:"basket",
    initialState,
    reducers:{
        addToBasket:(state,action)=>{
            const findProduct= state.products && state.products.find((product)=>product.id==action.payload.id);
            if(findProduct){//daha Ã¶nceden eklenmiÅŸse eÄŸer
                toast.warning("Bu Ã¼rÃ¼n zaten sepetinizde!");
                const extractedProducts=state.products.filter((product)=>product.id !=action.payload.id);
                findProduct.count +=action.payload.count;
                state.products=[...extractedProducts,findProduct];
                writeFromBasketToStorage(state.products);

            }
            else{
                state.products=[...state.products,action.payload];
                toast.success("ÃœrÃ¼n sepete eklendi!"); // âœ… BaÅŸarÄ± mesajÄ± gÃ¶ster

                writeFromBasketToStorage(state.products);
            }
        },
        removeBasket:(state,action)=>{//seÃ§ilen Ã¼rÃ¼nÃ¼ kaldÄ±r
            state.products=state.products.filter(product=>product.id !==action.payload);
            toast.info("ÃœrÃ¼n sepetten kaldÄ±rÄ±ldÄ±!"); // ğŸ”¥ KaldÄ±rma mesajÄ±

            writeFromBasketToStorage(state.products);
            
        }
       
    }
})
export const { addToBasket,removeBasket } = BasketSlice.actions;
export default BasketSlice.reducer